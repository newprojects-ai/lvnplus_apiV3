"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const gamification_controller_1 = require("../controllers/gamification.controller");
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
router.get('/progress', auth_1.authenticate, gamification_controller_1.getProgress);
router.post('/xp', auth_1.authenticate, gamification_controller_1.addXP);
router.post('/streak', auth_1.authenticate, gamification_controller_1.updateStreak);
router.get('/achievements', auth_1.authenticate, gamification_controller_1.getAchievements);
router.post('/achievements/:achievementId/unlock', auth_1.authenticate, gamification_controller_1.unlockAchievement);
router.get('/achievements/progress', auth_1.authenticate, gamification_controller_1.getAchievementProgress);
router.get('/rewards', auth_1.authenticate, gamification_controller_1.getAvailableRewards);
router.post('/rewards/:rewardId/purchase', auth_1.authenticate, gamification_controller_1.purchaseReward);
router.get('/levels', auth_1.authenticate, gamification_controller_1.getLevelInfo);
router.post('/levels/up', auth_1.authenticate, gamification_controller_1.levelUpNotification);
router.post('/subject-mastery', auth_1.authenticate, gamification_controller_1.updateSubjectMastery);
router.get('/activity', auth_1.authenticate, gamification_controller_1.getActivityLog);
router.post('/activity', auth_1.authenticate, gamification_controller_1.logActivity);
exports.default = router;
