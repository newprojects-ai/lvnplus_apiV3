"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const question_controller_1 = require("../controllers/question.controller");
const auth_1 = require("../middleware/auth");
const roles_1 = require("../middleware/roles");
const validation_1 = require("../middleware/validation");
const router = (0, express_1.Router)();
router.get('/filter', auth_1.authenticate, question_controller_1.filterQuestions);
router.get('/random', auth_1.authenticate, question_controller_1.getRandomQuestions);
router.get('/', auth_1.authenticate, question_controller_1.getQuestions);
router.get('/filter', auth_1.authenticate, question_controller_1.filterQuestions);
router.get('/random', auth_1.authenticate, question_controller_1.getRandomQuestions);
router.post('/', auth_1.authenticate, (0, roles_1.checkRole)(['TEACHER', 'ADMIN']), validation_1.validateQuestionCreation, question_controller_1.createQuestion);
router.get('/:id', auth_1.authenticate, question_controller_1.getQuestion);
router.put('/:id', auth_1.authenticate, (0, roles_1.checkRole)(['TEACHER', 'ADMIN']), validation_1.validateQuestionUpdate, question_controller_1.updateQuestion);
router.delete('/:id', auth_1.authenticate, (0, roles_1.checkRole)(['TEACHER', 'ADMIN']), question_controller_1.deleteQuestion);
router.post('/bulk-create', auth_1.authenticate, (0, roles_1.checkRole)(['TEACHER', 'ADMIN']), validation_1.validateBulkQuestionCreation, question_controller_1.bulkCreateQuestions);
router.get('/topics', auth_1.authenticate, question_controller_1.getTopics);
router.get('/topics/:id/subtopics', auth_1.authenticate, question_controller_1.getSubtopics);
exports.default = router;
